import React from ‚Äòreact‚Äô;
import ReactDOM from ‚Äòreact-dom/client‚Äô;
import ‚Äò./styles/index.css‚Äô;
import App from ‚Äò./App‚Äô;
import reportWebVitals from ‚Äò./reportWebVitals‚Äô;

// Error boundary component
class ErrorBoundary extends React.Component {
constructor(props) {
super(props);
this.state = { hasError: false, error: null, errorInfo: null };
}

static getDerivedStateFromError(error) {
return { hasError: true };
}

componentDidCatch(error, errorInfo) {
this.setState({
error: error,
errorInfo: errorInfo
});

```
// Log error to console
console.error('Error caught by boundary:', error, errorInfo);

// Send error to monitoring service (e.g., Sentry)
if (process.env.REACT_APP_SENTRY_DSN) {
  // Sentry.captureException(error);
}
```

}

render() {
if (this.state.hasError) {
return (
<div className="min-h-screen flex items-center justify-center bg-gray-50 px-4">
<div className="max-w-md w-full bg-white rounded-lg shadow-lg p-6 text-center">
<div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
<svg className="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
<path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
</svg>
</div>
<h1 className="text-xl font-semibold text-gray-900 mb-2">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h1>
<p className="text-gray-600 mb-4">
‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î
</p>
<p className="text-sm text-gray-500 mb-6">
Something went wrong. Please refresh the page and try again.
</p>
<div className="space-y-3">
<button
onClick={() => window.location.reload()}
className=‚Äúw-full bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors‚Äù
>
‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤
</button>
<button
onClick={() => this.setState({ hasError: false, error: null, errorInfo: null })}
className=‚Äúw-full bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600 transition-colors‚Äù
>
‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
</button>
</div>

```
        {process.env.NODE_ENV === 'development' && this.state.error && (
          <details className="mt-4 text-left">
            <summary className="cursor-pointer text-sm text-gray-500 hover:text-gray-700">
              ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (Development)
            </summary>
            <div className="mt-2 p-3 bg-gray-100 rounded text-xs font-mono text-red-600 overflow-auto max-h-40">
              <div className="font-bold">Error:</div>
              <div className="mb-2">{this.state.error && this.state.error.toString()}</div>
              <div className="font-bold">Stack trace:</div>
              <div>{this.state.errorInfo.componentStack}</div>
            </div>
          </details>
        )}
      </div>
    </div>
  );
}

return this.props.children;
```

}
}

// Initialize the app
const root = ReactDOM.createRoot(document.getElementById(‚Äòroot‚Äô));

// Render the app with error boundary
root.render(
<React.StrictMode>
<ErrorBoundary>
<App />
</ErrorBoundary>
</React.StrictMode>
);

// Performance monitoring
reportWebVitals((metric) => {
// Log to console in development
if (process.env.NODE_ENV === ‚Äòdevelopment‚Äô) {
console.log(‚ÄòWeb Vital:‚Äô, metric);
}

// Send to analytics in production
if (process.env.NODE_ENV === ‚Äòproduction‚Äô && process.env.REACT_APP_ENABLE_ANALYTICS) {
// Send to Google Analytics or other service
if (window.gtag) {
window.gtag(‚Äòevent‚Äô, metric.name, {
event_category: ‚ÄòWeb Vitals‚Äô,
event_label: metric.id,
value: Math.round(metric.value),
non_interaction: true,
});
}
}
});

// Service Worker update handling
if (‚ÄòserviceWorker‚Äô in navigator) {
navigator.serviceWorker.addEventListener(‚Äòcontrollerchange‚Äô, () => {
// Show update notification
if (window.confirm(‚Äò‡πÅ‡∏≠‡∏õ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?‚Äô)) {
window.location.reload();
}
});

// Listen for SW messages
navigator.serviceWorker.addEventListener(‚Äòmessage‚Äô, (event) => {
if (event.data && event.data.type === ‚ÄòUPDATE_AVAILABLE‚Äô) {
// Show update notification
showUpdateNotification();
}
});
}

// Update notification function
function showUpdateNotification() {
// Create update notification
const notification = document.createElement(‚Äòdiv‚Äô);
notification.className = ‚Äòfixed top-4 right-4 bg-blue-500 text-white p-4 rounded-lg shadow-lg z-50 max-w-sm‚Äô;
notification.innerHTML = `<div class="flex items-center justify-between"> <div> <div class="font-medium">‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà</div> <div class="text-sm opacity-90">‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏≠‡∏õ</div> </div> <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-white hover:text-gray-200"> ‚úï </button> </div>`;

notification.addEventListener(‚Äòclick‚Äô, () => {
if (‚ÄòserviceWorker‚Äô in navigator && navigator.serviceWorker.controller) {
navigator.serviceWorker.controller.postMessage({ type: ‚ÄòSKIP_WAITING‚Äô });
}
});

document.body.appendChild(notification);

// Auto remove after 10 seconds
setTimeout(() => {
if (notification.parentElement) {
notification.remove();
}
}, 10000);
}

// Handle online/offline status
window.addEventListener(‚Äòonline‚Äô, () => {
console.log(‚ÄòApp is back online‚Äô);
// Could trigger sync of pending actions
if (‚ÄòserviceWorker‚Äô in navigator && ‚Äòsync‚Äô in window.ServiceWorkerRegistration.prototype) {
navigator.serviceWorker.ready.then((registration) => {
return registration.sync.register(‚Äòbackground-sync‚Äô);
});
}
});

window.addEventListener(‚Äòoffline‚Äô, () => {
console.log(‚ÄòApp is offline‚Äô);
// Could show offline notification
});

// Handle app install prompt
let deferredPrompt;
window.addEventListener(‚Äòbeforeinstallprompt‚Äô, (e) => {
// Prevent Chrome 67 and earlier from automatically showing the prompt
e.preventDefault();
// Stash the event so it can be triggered later
deferredPrompt = e;

// Show install button or notification
showInstallPrompt();
});

function showInstallPrompt() {
// Create install prompt
const installBanner = document.createElement(‚Äòdiv‚Äô);
installBanner.className = ‚Äòfixed bottom-4 left-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg z-50 mx-auto max-w-sm‚Äô;
installBanner.innerHTML = `<div class="flex items-center justify-between"> <div> <div class="font-medium">‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ</div> <div class="text-sm opacity-90">‡πÄ‡∏û‡∏¥‡πà‡∏° WasteSortAI ‡∏•‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å</div> </div> <div class="flex space-x-2"> <button id="install-app" class="bg-white text-green-500 px-3 py-1 rounded text-sm font-medium"> ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á </button> <button id="dismiss-install" class="text-white hover:text-gray-200"> ‚úï </button> </div> </div>`;

document.body.appendChild(installBanner);

// Handle install button
installBanner.querySelector(‚Äô#install-app‚Äô).addEventListener(‚Äòclick‚Äô, async () => {
if (deferredPrompt) {
deferredPrompt.prompt();
const { outcome } = await deferredPrompt.userChoice;
console.log(`User response to install prompt: ${outcome}`);
deferredPrompt = null;
installBanner.remove();
}
});

// Handle dismiss button
installBanner.querySelector(‚Äô#dismiss-install‚Äô).addEventListener(‚Äòclick‚Äô, () => {
installBanner.remove();
});

// Auto remove after 15 seconds
setTimeout(() => {
if (installBanner.parentElement) {
installBanner.remove();
}
}, 15000);
}

// Handle app installed
window.addEventListener(‚Äòappinstalled‚Äô, () => {
console.log(‚ÄòPWA was installed‚Äô);
deferredPrompt = null;

// Could send analytics event
if (window.gtag) {
window.gtag(‚Äòevent‚Äô, ‚Äòpwa_installed‚Äô, {
event_category: ‚ÄòPWA‚Äô,
event_label: ‚Äòinstalled‚Äô
});
}
});

// Keyboard shortcuts
document.addEventListener(‚Äòkeydown‚Äô, (e) => {
// Ctrl/Cmd + K to open search (if implemented)
if ((e.ctrlKey || e.metaKey) && e.key === ‚Äòk‚Äô) {
e.preventDefault();
// Could open search modal
}

// Escape to close modals
if (e.key === ‚ÄòEscape‚Äô) {
// Could close any open modals
}
});

// Prevent right-click context menu in production
if (process.env.NODE_ENV === ‚Äòproduction‚Äô) {
document.addEventListener(‚Äòcontextmenu‚Äô, (e) => {
e.preventDefault();
});

// Disable F12, Ctrl+Shift+I, Ctrl+Shift+J, Ctrl+U
document.addEventListener(‚Äòkeydown‚Äô, (e) => {
if (e.key === ‚ÄòF12‚Äô ||
(e.ctrlKey && e.shiftKey && e.key === ‚ÄòI‚Äô) ||
(e.ctrlKey && e.shiftKey && e.key === ‚ÄòJ‚Äô) ||
(e.ctrlKey && e.key === ‚ÄòU‚Äô)) {
e.preventDefault();
}
});
}

// Development helpers
if (process.env.NODE_ENV === ‚Äòdevelopment‚Äô) {
// Add development helpers to window for debugging
window.WasteSortAI = {
clearCache: () => {
if (‚ÄòserviceWorker‚Äô in navigator && navigator.serviceWorker.controller) {
navigator.serviceWorker.controller.postMessage({ type: ‚ÄòCLEAR_CACHE‚Äô });
}
localStorage.clear();
sessionStorage.clear();
window.location.reload();
},
getVersion: () => {
if (‚ÄòserviceWorker‚Äô in navigator && navigator.serviceWorker.controller) {
navigator.serviceWorker.controller.postMessage({ type: ‚ÄòGET_VERSION‚Äô });
}
}
};

console.log(‚Äòüå± WasteSortAI Development Mode‚Äô);
console.log(‚ÄòAvailable commands: WasteSortAI.clearCache(), WasteSortAI.getVersion()‚Äô);
}